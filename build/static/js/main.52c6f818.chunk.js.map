{"version":3,"sources":["App.styles.ts","components/Listitem/styles.ts","components/Listitem/index.tsx","components/Listitem/AddArea/style.ts","components/Listitem/AddArea/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","Area","Header","h1","done","ListItem","item","useState","isChecked","setIsChecked","type","checked","onChange","e","target","name","AddArea","onEnter","inputText","setInputText","id","placeholder","value","onKeyUp","console","log","code","className","onClick","App","list","setList","taskName","newList","push","length","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAEaA,EAAYC,IAAOC,IAAV,0FAMTC,EAAOF,IAAOC,IAAV,gFAMJE,EAASH,IAAOI,GAAV,iJCPNL,EAAYC,IAAOC,KAAI,gBAAGI,EAAH,EAAGA,KAAH,+VAoBVA,EAAO,eAAiB,UApBd,yB,OCCvBC,EAAW,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAiB,EAELC,mBAASD,EAAKF,MAFT,mBAEhCI,EAFgC,KAErBC,EAFqB,KAKvC,OAEI,eAAC,EAAD,CAAaL,KAAMI,EAAnB,UACI,uBAAOE,KAAK,WAAWC,QAASH,EAChCI,SAAU,SAAAC,GAAC,OAAIJ,EAAcI,EAAEC,OAAOH,YAEnC,gCAAQL,EAAKS,WCjBfjB,EAAYC,IAAOC,IAAV,+nBCITgB,EAAU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAAqB,EAETV,mBAAS,IAFA,mBAEpCW,EAFoC,KAEzBC,EAFyB,KAkB3C,OACI,eAAC,EAAD,WACI,uBAAOT,KAAK,OAAOK,KAAK,GAAGK,GAAG,GAC9BC,YAAY,sBACZC,MAAOJ,EACPN,SAAU,SAAAC,GAAC,OAAGM,EAAaN,EAAEC,OAAOQ,QACpCC,QArBY,SAACV,GACjBW,QAAQC,IAAIZ,EAAEa,MACD,SAAVb,EAAEa,MAAiC,KAAdR,IACpBD,EAAQC,GACRC,EAAa,QAkBb,qBAAKQ,UAAU,QAAQC,QAdV,WACC,KAAdV,IACAD,EAAQC,GACRC,EAAa,MAWb,wBCWGU,EArCH,WAAO,IAAD,EAEQtB,mBAAiB,IAFzB,mBAETuB,EAFS,KAEHC,EAFG,KAiBhB,OACE,mCACF,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,+BAEA,cAAC,EAAD,CAASd,QAhBS,SAACe,GACrB,IAAIC,EAAO,YAAOH,GAClBG,EAAQC,KAAM,CACZd,GAAIU,EAAKK,OAAS,EAClBpB,KAAMiB,EACN5B,MAAM,IAGR2B,EAAQE,MAULH,EAAKM,KAAI,SAAC9B,EAAM+B,GAAP,OAER,cAAC,EAAD,CAAsB/B,KAAMA,GAAb+B,cClBRC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.52c6f818.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div `\r\nbackground-color: #17181F;\r\ncolor: gray;\r\nmin-height: 100vh;\r\n`;\r\n\r\nexport const Area = styled.div`\r\n margin: auto;\r\n max-width 980px;\r\n padding: 10px;\r\n`;\r\n\r\nexport const Header = styled.h1`\r\nmargin: 0;\r\npadding: 0;\r\ncolor: #ffff;\r\ntext-align: center;\r\nborder-bottom: 1px solid #444;\r\npadding-bottom: 20px\r\n\r\n`;\r\n\r\n","\r\nimport styled from \"styled-components\";\r\n\r\ntype ContainerProps = {\r\n    done: boolean;\r\n}\r\n\r\nexport const Container = styled.div(({ done }: ContainerProps)=> (\r\n    `\r\n  \r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    \r\n    background: #20212C;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    text-indent: 5px;\r\n\r\n    input {\r\n        width: 20px;\r\n        height: 20px;\r\n    }\r\n\r\n    label {\r\n       color: #CCC;\r\n       text-decoration: ${done ? 'line-through' : 'initial'};\r\n    }\r\n    \r\n\r\n`\r\n));","import { useState } from 'react';\r\nimport * as C from './styles';\r\nimport { Item } from '../../types/item';\r\n\r\n\r\ntype Props = {\r\n    item: Item\r\n}\r\nexport const ListItem = ({item}: Props) => {\r\n\r\n    const [isChecked, setIsChecked] = useState(item.done);\r\n\r\n\r\n    return (\r\n        \r\n        <C.Container done={isChecked}>\r\n            <input type=\"checkbox\" checked={isChecked}\r\n            onChange={e => setIsChecked( e.target.checked)} \r\n            />\r\n               <label>{item.name}</label> \r\n        </C.Container>\r\n        \r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div `\r\ndisplay: flex;\r\nalign-items: center;\r\nborder: none;\r\nbackground: none;\r\npadding: 10px;\r\nmargin: 20px 0;\r\n\r\ninput {\r\n    width: 400px;\r\n    height: 30px;\r\n    color: #CCC;\r\n    background: none;\r\n    border: none;\r\n    border-bottom: 1px solid #CCC;\r\n    border-radius: 5px;\r\n    outline: 0;\r\n    text-indent: 10px;\r\n    flex: 1;\r\n    box-shadow: 1px 1px 1px white;\r\n}\r\n\r\n.image {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    margin-left: 930px\r\n}\r\n.image:hover {\r\n    font-size: 22px;\r\n    margin-top -5px;\r\n    margin-left: 925px;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    border-radius: 15px\r\n}\r\n`;","import { useState, KeyboardEvent } from 'react'\r\nimport * as C from './style'\r\n\r\ntype Props = {\r\n    onEnter: (taskName: string) => void\r\n}\r\nexport const AddArea = ({ onEnter }: Props) => {\r\n\r\n    const [inputText, setInputText] = useState('');\r\n    const handleKeyUp = (e: KeyboardEvent) => {\r\n        console.log(e.code);\r\n        if(e.code == 'Enter' && inputText !== '') {\r\n            onEnter(inputText);\r\n            setInputText('');\r\n        }\r\n    }\r\n    \r\n    const adicionaMais = () => {\r\n        if (inputText !== '') {\r\n            onEnter(inputText);\r\n            setInputText('');\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <C.Container>\r\n            <input type=\"text\" name=\"\" id=\"\" \r\n            placeholder=\"Adicione uma tarefa\" \r\n            value={inputText}\r\n            onChange={e=> setInputText(e.target.value)}\r\n            onKeyUp={handleKeyUp} />\r\n            <div className=\"image\" onClick={adicionaMais}>âž•</div>\r\n        </C.Container>\r\n    )\r\n}","import { useState } from 'react';\nimport * as C from './App.styles';\nimport { Item } from './types/item';\nimport { ListItem } from './components/Listitem/index';\nimport { AddArea } from './components/Listitem/AddArea'; \nconst App = () => {\n  \n  const [list, setList] = useState<Item[]>([\n \n   \n  ]);\n\n  const handleAddTask = (taskName: string) => {\n    let newList = [...list];\n    newList.push ({\n      id: list.length + 1,\n      name: taskName,\n      done: false\n    });\n\n    setList(newList);\n  }\n  return (\n    <>\n  <C.Container>\n    <C.Area>\n      <C.Header>Lista de Tarefas</C.Header>\n\n      <AddArea onEnter={handleAddTask} />\n        \n      {list.map((item, index) => (\n        \n        <ListItem key={index} item={item}  />\n        \n      ))}\n\n    </C.Area>\n  </C.Container>\n    </>\n  )\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}